//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"

//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
// константы курсоров


TForm1 *Form1;
int DrawingTool;
bool Drawing;
TPoint Old, Start;
TColor PenColor;
int pw;

/*
    HWND crFill;
    HWND crPlus;
    HWND crDraw;
    HWND crErase;
*/

enum{dtPen,dtLine,dtTriangle,dtEllipse,dtRect,dtFRect, dtFEllipse};
int ObjCounter;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
//crFill=LoadImage(0,"cursor1.cur",IMAGE_CURSOR,0,0,LR_LOADFROMFILE);
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Image1MouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y)
{
Drawing=true;
/*
    if (ActionList->ItemIndex!=ActionList->Items->Count-1) {
    for (int i = ActionList->Items->Count; i > ActionList->Items->Count-ActionList->ItemIndex; i--) {
    		ActionList->Items->Delete(i);
    }
	}
*/

CreateNewLayer->Execute();

Image1->Canvas->Pen->Color=PenColor;
Image1->Canvas->Pen->Width=pw;

if (DrawingTool==dtPen) {
	Image1->Canvas->MoveTo(X,Y);
	Image1->Canvas->LineTo(X,Y);
	ActionList->Items->Add(AnsiString(ObjCounter)+" Карандаш ");
	Image1->Cursor = crDraw;
}
if (DrawingTool==dtLine) {
	Image1->Canvas->Pen->Mode=pmNotXor;
	Start.x=Old.x=X;
	Start.y=Old.y=Y;
	ActionList->Items->Add(AnsiString(ObjCounter)+" Линия ");
}
if (DrawingTool==dtRect) {
	Image1->Canvas->Brush->Style = bsNone;
	Image1->Canvas->Pen->Mode=pmNotXor;// pmCopy;
	ActionList->Items->Add(AnsiString(ObjCounter)+" Прямоугольник ");
}
if (DrawingTool==dtFRect) {
	Image1->Canvas->Pen->Mode=pmNotXor;// pmCopy;
	ActionList->Items->Add(AnsiString(ObjCounter)+" Пустой прямоугольник ");
}
if (DrawingTool==dtEllipse) {
	Image1->Canvas->Pen->Mode=pmNotXor;// pmCopy;
	ActionList->Items->Add(AnsiString(ObjCounter)+" Эллипс ");
}
if (DrawingTool==dtFEllipse) {
	Image1->Canvas->Pen->Mode=pmNotXor;// pmCopy;
	ActionList->Items->Add(AnsiString(ObjCounter)+" Эллипс ");
}
Start.x=Old.x=X;
Start.y=Old.y=Y;
ActionList->ItemIndex=ActionList->Items->Count-1;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Image1MouseMove(TObject *Sender, TShiftState Shift, int X,
          int Y)
{
if (Drawing) {
	if (DrawingTool==dtPen) {
		Image1->Canvas->LineTo(X,Y);
	}
	if (DrawingTool==dtLine) {
		Image1->Canvas->MoveTo(Start.x,Start.y);
		Image1->Canvas->LineTo(Old.x,Old.y);

		Image1->Canvas->MoveTo(Start.x,Start.y);
		Image1->Canvas->LineTo(X,Y);

		Old.x=X;
		Old.y=Y;

	}
	if (DrawingTool==dtRect) {
		Image1->Canvas->Rectangle(Start.x,Start.y,Old.x,Old.y);
		Image1->Canvas->Rectangle(Start.x,Start.y,X,Y);
		Old.x=X;
		Old.y=Y;
	}
	if (DrawingTool==dtFRect) {
		Image1->Canvas->Rectangle(Start.x,Start.y,Old.x,Old.y);
		Image1->Canvas->Rectangle(Start.x,Start.y,X,Y);
		Old.x=X;
		Old.y=Y;
	}
	if (DrawingTool==dtEllipse) {
		Image1->Canvas->Rectangle(Start.x,Start.y,Old.x,Old.y);
		Image1->Canvas->Rectangle(Start.x,Start.y,X,Y);
		Image1->Canvas->Ellipse(Start.x,Start.y,Old.x,Old.y);
		Image1->Canvas->Ellipse(Start.x,Start.y,X,Y);
		Old.x=X;
		Old.y=Y;
	}
	if (DrawingTool==dtFEllipse) {
		Image1->Canvas->Rectangle(Start.x,Start.y,Old.x,Old.y);
		Image1->Canvas->Rectangle(Start.x,Start.y,X,Y);
		Image1->Canvas->Ellipse(Start.x,Start.y,Old.x,Old.y);
		Image1->Canvas->Ellipse(Start.x,Start.y,X,Y);
		Old.x=X;
		Old.y=Y;
	}
}
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Image1MouseUp(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y)
{
Image1->Canvas->Pen->Width=pw;
if (DrawingTool==dtPen) {

}
if (DrawingTool==dtLine) {
	Image1->Canvas->MoveTo(Start.x,Start.y);
	Image1->Canvas->LineTo(Old.x,Old.y);
	Image1->Canvas->Pen->Mode=pmCopy;
	Image1->Canvas->MoveTo(Start.x,Start.y);
	Image1->Canvas->LineTo(X,Y);
}
if (DrawingTool==dtRect) {
	Image1->Canvas->Brush->Style = bsNone;
	Image1->Canvas->Rectangle(Start.x,Start.y,Old.x,Old.y);
	Image1->Canvas->Pen->Mode=pmCopy;
	Image1->Canvas->Rectangle(Start.x,Start.y,X,Y);
}
if (DrawingTool==dtFRect) {
	Image1->Canvas->Brush->Style = bsClear;
	Image1->Canvas->Rectangle(Start.x,Start.y,Old.x,Old.y);
	Image1->Canvas->Pen->Mode=pmCopy;
	Image1->Canvas->Rectangle(Start.x,Start.y,X,Y);
}
if (DrawingTool==dtEllipse) {
	Image1->Canvas->Rectangle(Start.x,Start.y,Old.x,Old.y);
	Image1->Canvas->Brush->Style = bsClear;
	Image1->Canvas->Ellipse(Start.x,Start.y,Old.x,Old.y);
	Image1->Canvas->Pen->Mode=pmCopy;
	Image1->Canvas->Ellipse(Start.x,Start.y,X,Y);
}
if (DrawingTool==dtFEllipse) {
	Image1->Canvas->Rectangle(Start.x,Start.y,Old.x,Old.y);
	Image1->Canvas->Brush->Style = bsNone;
	Image1->Canvas->Ellipse(Start.x,Start.y,Old.x,Old.y);
	Image1->Canvas->Pen->Mode=pmCopy;
	Image1->Canvas->Ellipse(Start.x,Start.y,X,Y);
}
//BackScr->Visible=false;
//BackScr->Picture=NULL;
Drawing=false;
SaveLayer->Execute();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::SpeedButton1Click(TObject *Sender)
{
UnflatAll->Execute();
DrawingTool=dtPen;
((TSpeedButton*)Sender)->Flat=true;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::UnflatAllExecute(TObject *Sender)
{
//
for (int i = 0; i < this->ComponentCount; i++) {
if (this->Components[i]->Tag==1) {
	((TSpeedButton*)this->Components[i])->Flat=false;
}
}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::SpeedButton2Click(TObject *Sender)
{
UnflatAll->Execute();
DrawingTool=dtLine;
((TSpeedButton*)Sender)->Flat=true;
}
//---------------------------------------------------------------------------



void __fastcall TForm1::ClearClick(TObject *Sender)
{
if (MessageDlg("Изображение будет очищено, продолжить?",mtWarning, TMsgDlgButtons() << mbYes << mbNo,0)==6){
	Image1->Picture=NULL;
	CreateNewLayer->Execute();
	ActionList->Items->Add("Очистка ");
	SaveLayer->Execute();
	IdentImg->Execute();
}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::SpeedButton5Click(TObject *Sender)
{
UnflatAll->Execute();
DrawingTool=dtFRect;
((TSpeedButton*)Sender)->Flat=true;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::SpeedButton3Click(TObject *Sender)
{
UnflatAll->Execute();
DrawingTool=dtRect;
((TSpeedButton*)Sender)->Flat=true;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::SpeedButton4Click(TObject *Sender)
{
UnflatAll->Execute();
DrawingTool=dtEllipse;
((TSpeedButton*)Sender)->Flat=true;
}
//---------------------------------------------------------------------------



void __fastcall TForm1::ColorListBox1Click(TObject *Sender)
{
PenColor=ColorListBox1->Selected;
}
//---------------------------------------------------------------------------


void __fastcall TForm1::PenWidthChange(TObject *Sender)
{
pw=PenWidth->Text.ToInt();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::ActionListClick(TObject *Sender)
{
AnsiString ActionName;
TImage *img;

ActionName="img"+ActionNum->Items->Strings[ActionList->ItemIndex];

img=((TImage*)Panel2->FindComponent(ActionName));
Image1->Picture=img->Picture;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::CreateNewLayerExecute(TObject *Sender)
{
ObjCounter++;
TImage *img=new TImage(Panel2);
img->Parent=Panel2;
img->Name="img"+AnsiString(ObjCounter);
img->Width=Image1->Width;
img->Height=Image1->Height;
img->Tag=ObjCounter;
img->Visible=false;
ActionNum->Items->Add(ObjCounter);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::SaveLayerExecute(TObject *Sender)
{
TImage *img=((TImage*)Panel2->FindComponent("img"+AnsiString(ObjCounter)));
img->Picture=Image1->Picture;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::DeleteLayerExecute(TObject *Sender)
{
ActionList->ItemIndex=ActionList->Items->Count-1;
ActionList->Items->Delete(ActionList->ItemIndex);
ActionNum->Items->Delete(ActionList->ItemIndex);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::IdentImgExecute(TObject *Sender)
{
Image1->Picture=NULL;
int i1=0;
Image1->Canvas->Pen->Color=clScrollBar;
for (int i = 0; i < Image1->Width+30; i=i+30) {
	Image1->Canvas->MoveTo(i1,0);
	Image1->Canvas->LineTo(i1,Image1->Height);
	i1=i;
}
for (int i = 0; i <= Image1->Height+30; i=i+30) {
	Image1->Canvas->MoveTo(0,i1);
	Image1->Canvas->LineTo(Image1->Width,i1);
	i1=i;
}
}
//---------------------------------------------------------------------------


void __fastcall TForm1::SpeedButton9Click(TObject *Sender)
{
SizePan->Visible=false;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N12Click(TObject *Sender)
{
SizePan->Visible=true;
}
//---------------------------------------------------------------------------




void __fastcall TForm1::ResizeImageClick(TObject *Sender)
{
if (MessageDlg("Изображение будет удалено, продолжить?",mtWarning, TMsgDlgButtons() << mbYes << mbNo,0)==6){
	Clear->Click();
	Image1->Width=EWidth->Text.ToInt();
	Image1->Height=EHeight->Text.ToInt();
	SizePan->Visible=false;
	IdentImg->Execute();
}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::FormShow(TObject *Sender)
{
IdentImg->Execute();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N5Click(TObject *Sender)
{
if (OpenPictureDialog1->Execute()) {
	try {
	Image1->Picture->LoadFromFile(OpenPictureDialog1->FileName);
	} catch (...) {
	MessageDlg("Не удалось загрузить изображение",mtWarning, TMsgDlgButtons() << mbOK,0);
	}
}
}
//---------------------------------------------------------------------------



void __fastcall TForm1::SpeedButton6Click(TObject *Sender)
{
UnflatAll->Execute();
DrawingTool=dtFEllipse;
((TSpeedButton*)Sender)->Flat=true;
}
//---------------------------------------------------------------------------

